{
	"info": {
		"_postman_id": "06068f12-e5cf-400e-be62-e1e757a31da3",
		"name": "fud",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "fud1保全台账列表",
			"item": [
				{
					"name": "fud1保全台账列表",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c5800c9f-e094-480f-9c5f-0721d29b0da8",
								"exec": [
									"//AES 128  encrpt",
									"//  var originalData = data;",
									"let originalData=",
									"{",
									"    \"header\": {",
									"        \"orgCode\": \"shshanshanche01\",",
									"        \"transNo\": \"trans201611160001\",",
									"        \"transDate\": \"2016-11-07 15:28:30\",",
									"        \"token\": \"DF97B637317939224854BF590B2177B1\"",
									"    },",
									"    \"busiData\": {",
									"        \"batchNo\": \"batch201111070001\",",
									"    ",
									"    },",
									"    \"securityInfo\": {",
									"        \"sign\": \"E058A09C47A1BB53F5DE15AA82DDDB0C\"",
									"    }",
									"};",
									"",
									"let data2 = JSON.stringify(originalData);",
									"let key = \"daijinbcqc123456\";",
									"let iv  = \"1234567890123456\";",
									"",
									"console.log('request data->' + data2);",
									"key = CryptoJS.enc.Utf8.parse(key);",
									"iv  = CryptoJS.enc.Utf8.parse(iv);",
									"let srcs = CryptoJS.enc.Utf8.parse(data2);",
									"",
									"// var srcs = CryptoJS.enc.Utf8.parse(word);",
									"  var encrypted = CryptoJS.AES.encrypt(",
									"      srcs,",
									"      key,",
									"      { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 }",
									"    );",
									"  var hexStr = encrypted.ciphertext.toString();",
									"",
									"// 将Hex密文转化为按照utf8进行解析",
									"let utf8SrcStr = CryptoJS.enc.Utf8.parse(hexStr);  ",
									" ",
									"//   将密文转为Base64的字符串",
									"var base64Str = CryptoJS.enc.Base64.stringify(utf8SrcStr);",
									"pm.globals.set(\"parameter\", base64Str);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "50960f03-cd81-41a4-80e1-02197484d4c8",
								"exec": [
									"var intermediate;",
									"var base64Content = responseBody;",
									"",
									"let key = \"daijinbcqc123456\";",
									"let iv  = \"1234567890123456\";",
									"",
									"key = CryptoJS.enc.Utf8.parse(key);",
									"iv  = CryptoJS.enc.Utf8.parse(iv);",
									"//console.log('base64Content->' + base64Content);",
									"//Base64解码",
									"let encryptedHexStr = CryptoJS.enc.Base64.parse(base64Content);",
									"",
									"//密文转化为UTF8",
									"encryptedHexStr = encryptedHexStr.toString(CryptoJS.enc.Utf8);",
									"//console.log('encryptedHexStr->'+ encryptedHexStr);",
									"",
									"// Hex解码",
									"let hexStr = CryptoJS.enc.Hex.parse(encryptedHexStr);",
									"//console.log('hexStr->'+ hexStr);",
									"var srcs = CryptoJS.enc.Base64.stringify(hexStr);",
									"//console.log('srcs->'+ srcs);",
									"",
									"var decrypt = CryptoJS.AES.decrypt(srcs, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });",
									"",
									"//console.log('typeof decrypt->'+ typeof decrypt);",
									"",
									"var decryptValue = decrypt.toString(CryptoJS.enc.Utf8);",
									"",
									"//console.log('decryptValue->'+decryptValue.toString());",
									"//获取用例描述",
									"//var testResult = pm.variables.get(\"caseDescription\");        ",
									"pm.test(decryptValue);",
									"",
									"var JsonValue=JSON.parse(decryptValue);",
									"tests['code==1000']=JsonValue.busiData.resultCode==1000",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//pm.test(testResult);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BaseUrl}}/user-service/userFinance/getUserFinanceList?content={{parameter}}",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"user-service",
								"userFinance",
								"getUserFinanceList"
							],
							"query": [
								{
									"key": "content",
									"value": "{{parameter}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "fud2保全台账详情接口",
			"item": [
				{
					"name": "fud2保全台账详情接口",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6b688a6c-f14c-4179-a6c1-d3df6db3259e",
								"exec": [
									"//AES 128  encrpt",
									"//  var originalData = data;",
									"let originalData=",
									"{",
									"    \"header\": {",
									"        \"orgCode\": \"shshanshanche01\",",
									"        \"transNo\": \"trans201611160001\",",
									"        \"transDate\": \"2016-11-07 15:28:30\",",
									"        \"token\": \"DF97B637317939224854BF590B2177B1\"",
									"    },",
									"    \"busiData\": {",
									"        \"batchNo\": \"batch201111070001\",",
									"        \"userFinanceId\":\"3e01116b33c0413390dc50aeb32eb186\"",
									"    },",
									"    \"securityInfo\": {",
									"        \"sign\": \"E058A09C47A1BB53F5DE15AA82DDDB0C\"",
									"    }",
									"};",
									"",
									"let data2 = JSON.stringify(originalData);",
									"let key = \"daijinbcqc123456\";",
									"let iv  = \"1234567890123456\";",
									"",
									"console.log('request data->' + data2);",
									"key = CryptoJS.enc.Utf8.parse(key);",
									"iv  = CryptoJS.enc.Utf8.parse(iv);",
									"let srcs = CryptoJS.enc.Utf8.parse(data2);",
									"",
									"// var srcs = CryptoJS.enc.Utf8.parse(word);",
									"  var encrypted = CryptoJS.AES.encrypt(",
									"      srcs,",
									"      key,",
									"      { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 }",
									"    );",
									"  var hexStr = encrypted.ciphertext.toString();",
									"",
									"// 将Hex密文转化为按照utf8进行解析",
									"let utf8SrcStr = CryptoJS.enc.Utf8.parse(hexStr);  ",
									" ",
									"//   将密文转为Base64的字符串",
									"var base64Str = CryptoJS.enc.Base64.stringify(utf8SrcStr);",
									"pm.globals.set(\"parameter\", base64Str);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4c295132-fe16-4860-9659-77ceb1073a8e",
								"exec": [
									"var intermediate;",
									"var base64Content = responseBody;",
									"",
									"let key = \"daijinbcqc123456\";",
									"let iv  = \"1234567890123456\";",
									"",
									"key = CryptoJS.enc.Utf8.parse(key);",
									"iv  = CryptoJS.enc.Utf8.parse(iv);",
									"//console.log('base64Content->' + base64Content);",
									"//Base64解码",
									"let encryptedHexStr = CryptoJS.enc.Base64.parse(base64Content);",
									"",
									"//密文转化为UTF8",
									"encryptedHexStr = encryptedHexStr.toString(CryptoJS.enc.Utf8);",
									"//console.log('encryptedHexStr->'+ encryptedHexStr);",
									"",
									"// Hex解码",
									"let hexStr = CryptoJS.enc.Hex.parse(encryptedHexStr);",
									"//console.log('hexStr->'+ hexStr);",
									"var srcs = CryptoJS.enc.Base64.stringify(hexStr);",
									"//console.log('srcs->'+ srcs);",
									"",
									"var decrypt = CryptoJS.AES.decrypt(srcs, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });",
									"",
									"//console.log('typeof decrypt->'+ typeof decrypt);",
									"",
									"var decryptValue = decrypt.toString(CryptoJS.enc.Utf8);",
									"",
									"//console.log('decryptValue->'+decryptValue.toString());",
									"//获取用例描述",
									"//var testResult = pm.variables.get(\"caseDescription\");        ",
									"pm.test(decryptValue);",
									"",
									"var JsonValue=JSON.parse(decryptValue);",
									"tests['code==1000']=JsonValue.busiData.resultCode==1000",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//pm.test(testResult);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BaseUrl}}/user-service/userFinance/getUserFinanceDetail?content={{parameter}}",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"user-service",
								"userFinance",
								"getUserFinanceDetail"
							],
							"query": [
								{
									"key": "content",
									"value": "{{parameter}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "fud3保全台账导出接口",
			"item": [
				{
					"name": "fud3保全台账导出接口",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "232e41df-cc37-4ef0-acc3-6a16e0dd366c",
								"exec": [
									"//AES 128  encrpt",
									"//  var originalData = data;",
									"let originalData=",
									"{",
									"    \"header\": {",
									"        \"orgCode\": \"shshanshanche01\",",
									"        \"transNo\": \"trans201611160001\",",
									"        \"transDate\": \"2016-11-07 15:28:30\",",
									"        \"token\":\"DF97B637317939224854BF590B2177B1\"",
									"    },",
									"    \"busiData\": {",
									"        \"batchNo\": \"batch201111070001\",",
									"     ",
									"    },",
									"    \"securityInfo\": {",
									"        \"sign\": \"E058A09C47A1BB53F5DE15AA82DDDB0C\"",
									"    }",
									"};",
									"let data2 = JSON.stringify(originalData);",
									"let key = \"daijinbcqc123456\";",
									"let iv  = \"1234567890123456\";",
									"",
									"console.log('request data->' + data2);",
									"key = CryptoJS.enc.Utf8.parse(key);",
									"iv  = CryptoJS.enc.Utf8.parse(iv);",
									"let srcs = CryptoJS.enc.Utf8.parse(data2);",
									"",
									"// var srcs = CryptoJS.enc.Utf8.parse(word);",
									"  var encrypted = CryptoJS.AES.encrypt(",
									"      srcs,",
									"      key,",
									"      { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 }",
									"    );",
									"  var hexStr = encrypted.ciphertext.toString();",
									"",
									"// 将Hex密文转化为按照utf8进行解析",
									"let utf8SrcStr = CryptoJS.enc.Utf8.parse(hexStr);  ",
									" ",
									"//   将密文转为Base64的字符串",
									"var base64Str = CryptoJS.enc.Base64.stringify(utf8SrcStr);",
									"pm.globals.set(\"parameter\", base64Str);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "57beb092-3d8d-4d1e-bc04-3390f11cf3fe",
								"exec": [
									"var intermediate;",
									"var base64Content = responseBody;",
									"",
									"let key = \"daijinbcqc123456\";",
									"let iv  = \"1234567890123456\";",
									"",
									"key = CryptoJS.enc.Utf8.parse(key);",
									"iv  = CryptoJS.enc.Utf8.parse(iv);",
									"//console.log('base64Content->' + base64Content);",
									"//Base64解码",
									"let encryptedHexStr = CryptoJS.enc.Base64.parse(base64Content);",
									"",
									"//密文转化为UTF8",
									"encryptedHexStr = encryptedHexStr.toString(CryptoJS.enc.Utf8);",
									"//console.log('encryptedHexStr->'+ encryptedHexStr);",
									"",
									"// Hex解码",
									"let hexStr = CryptoJS.enc.Hex.parse(encryptedHexStr);",
									"//console.log('hexStr->'+ hexStr);",
									"var srcs = CryptoJS.enc.Base64.stringify(hexStr);",
									"//console.log('srcs->'+ srcs);",
									"",
									"var decrypt = CryptoJS.AES.decrypt(srcs, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });",
									"",
									"//console.log('typeof decrypt->'+ typeof decrypt);",
									"",
									"var decryptValue = decrypt.toString(CryptoJS.enc.Utf8);",
									"",
									"//console.log('decryptValue->'+decryptValue.toString());",
									"//获取用例描述",
									"//var testResult = pm.variables.get(\"caseDescription\");        ",
									"pm.test(decryptValue);",
									"",
									"var JsonValue=JSON.parse(decryptValue);",
									"tests['code==1000']=JsonValue.busiData.resultCode==1000",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//pm.test(testResult);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BaseUrl}}/user-service/userFinance/getUserFinanceExcel?content={{parameter}}",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"user-service",
								"userFinance",
								"getUserFinanceExcel"
							],
							"query": [
								{
									"key": "content",
									"value": "{{parameter}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "fud4导入财务数据信息",
			"item": [
				{
					"name": "fud4导入财务数据信息",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee5925b8-5a6f-4e6d-b3f3-0bc45b29ac1a",
								"exec": [
									"var intermediate;",
									"var base64Content = responseBody;",
									"",
									"let key = \"daijinbcqc123456\";",
									"let iv  = \"1234567890123456\";",
									"",
									"key = CryptoJS.enc.Utf8.parse(key);",
									"iv  = CryptoJS.enc.Utf8.parse(iv);",
									"//console.log('base64Content->' + base64Content);",
									"//Base64解码",
									"let encryptedHexStr = CryptoJS.enc.Base64.parse(base64Content);",
									"",
									"//密文转化为UTF8",
									"encryptedHexStr = encryptedHexStr.toString(CryptoJS.enc.Utf8);",
									"//console.log('encryptedHexStr->'+ encryptedHexStr);",
									"",
									"// Hex解码",
									"let hexStr = CryptoJS.enc.Hex.parse(encryptedHexStr);",
									"//console.log('hexStr->'+ hexStr);",
									"var srcs = CryptoJS.enc.Base64.stringify(hexStr);",
									"//console.log('srcs->'+ srcs);",
									"",
									"var decrypt = CryptoJS.AES.decrypt(srcs, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });",
									"",
									"//console.log('typeof decrypt->'+ typeof decrypt);",
									"",
									"var decryptValue = decrypt.toString(CryptoJS.enc.Utf8);",
									"",
									"//console.log('decryptValue->'+decryptValue.toString());",
									"//获取用例描述",
									"//var testResult = pm.variables.get(\"caseDescription\");        ",
									"pm.test(decryptValue);",
									"",
									"var JsonValue=JSON.parse(decryptValue);",
									"tests['code==1000']=JsonValue.busiData.resultCode==1000",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//pm.test(testResult);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "22365b74-77f0-422d-8b4c-942a95486024",
								"exec": [
									"//AES 128  encrpt",
									"//  var originalData = data;",
									"let originalData=",
									"{",
									"\"header\": {",
									"    \"orgCode\": \"shshanshanche01\", ",
									"    \"transNo\": \"trans201611160001\", ",
									"    \"transDate\": \"2016-11-07 15:28:30\", ",
									"    \"token\": \"DF97B637317939224854BF590B2177B1\"",
									"}, ",
									"\"busiData\": {",
									"    \"batchNo\": \"batch201111070001\",",
									"    \"model\":[",
									"        {",
									"        \"types\": \"1\",",
									"        \"number\": \"12345\",",
									"        \"title\": \"闪闪\",",
									"        \"firstAmount\": \"18\",",
									"        \"secondAmount\": \"10000\",",
									"        \"dayTimes\": \"2019-08-09 12:00:00\",",
									"        \"remark\": \"好嗨哦\",",
									"        \"carNo\": \"沪A00001\",",
									"        \"userApplyRewardId\": \"123\"",
									"        }",
									"    ]",
									"},",
									"\"securityInfo\": {",
									"    \"sign\": \"E058A09C47A1BB53F5DE15AA82DDDB0C\"",
									"}",
									"};",
									"let data2 = JSON.stringify(originalData);",
									"let key = \"daijinbcqc123456\";",
									"let iv  = \"1234567890123456\";",
									"",
									"console.log('request data->' + data2);",
									"key = CryptoJS.enc.Utf8.parse(key);",
									"iv  = CryptoJS.enc.Utf8.parse(iv);",
									"let srcs = CryptoJS.enc.Utf8.parse(data2);",
									"",
									"// var srcs = CryptoJS.enc.Utf8.parse(word);",
									"  var encrypted = CryptoJS.AES.encrypt(",
									"      srcs,",
									"      key,",
									"      { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 }",
									"    );",
									"  var hexStr = encrypted.ciphertext.toString();",
									"",
									"// 将Hex密文转化为按照utf8进行解析",
									"let utf8SrcStr = CryptoJS.enc.Utf8.parse(hexStr);  ",
									" ",
									"//   将密文转为Base64的字符串",
									"var base64Str = CryptoJS.enc.Base64.stringify(utf8SrcStr);",
									"pm.globals.set(\"parameter\", base64Str);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{parameter}}"
						},
						"url": "{{BaseUrl}}/user-service/userFinance/import"
					},
					"response": []
				}
			]
		},
		{
			"name": "fud5获取财务数据列表",
			"item": [
				{
					"name": "fud5获取财务数据列表",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "970fbee6-19c4-401f-97d3-8c19488f6b12",
								"exec": [
									"//AES 128  encrpt",
									"//  var originalData = data;",
									"let originalData=",
									"{",
									"\"header\": {",
									"    \"orgCode\": \"shshanshanche01\",",
									"    \"transNo\": \"trans201611160001\",",
									"    \"transDate\": \"2016-11-07 15:28:30\",",
									"    \"token\": \"DF97B637317939224854BF590B2177B1\"",
									"},",
									"\"busiData\": {",
									"    \"batchNo\": \"batch201111070001\",",
									"    \"types\":1,",
									"   ",
									"},",
									"\"securityInfo\": {",
									"    \"sign\": \"E058A09C47A1BB53F5DE15AA82DDDB0C\"",
									"}",
									"};",
									"let data2 = JSON.stringify(originalData);",
									"let key = \"daijinbcqc123456\";",
									"let iv  = \"1234567890123456\";",
									"",
									"console.log('request data->' + data2);",
									"key = CryptoJS.enc.Utf8.parse(key);",
									"iv  = CryptoJS.enc.Utf8.parse(iv);",
									"let srcs = CryptoJS.enc.Utf8.parse(data2);",
									"",
									"// var srcs = CryptoJS.enc.Utf8.parse(word);",
									"  var encrypted = CryptoJS.AES.encrypt(",
									"      srcs,",
									"      key,",
									"      { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 }",
									"    );",
									"  var hexStr = encrypted.ciphertext.toString();",
									"",
									"// 将Hex密文转化为按照utf8进行解析",
									"let utf8SrcStr = CryptoJS.enc.Utf8.parse(hexStr);  ",
									" ",
									"//   将密文转为Base64的字符串",
									"var base64Str = CryptoJS.enc.Base64.stringify(utf8SrcStr);",
									"pm.globals.set(\"parameter\", base64Str);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e169d93d-a568-45da-ad28-42e95ec0195e",
								"exec": [
									"var intermediate;",
									"var base64Content = responseBody;",
									"",
									"let key = \"daijinbcqc123456\";",
									"let iv  = \"1234567890123456\";",
									"",
									"key = CryptoJS.enc.Utf8.parse(key);",
									"iv  = CryptoJS.enc.Utf8.parse(iv);",
									"//console.log('base64Content->' + base64Content);",
									"//Base64解码",
									"let encryptedHexStr = CryptoJS.enc.Base64.parse(base64Content);",
									"",
									"//密文转化为UTF8",
									"encryptedHexStr = encryptedHexStr.toString(CryptoJS.enc.Utf8);",
									"//console.log('encryptedHexStr->'+ encryptedHexStr);",
									"",
									"// Hex解码",
									"let hexStr = CryptoJS.enc.Hex.parse(encryptedHexStr);",
									"//console.log('hexStr->'+ hexStr);",
									"var srcs = CryptoJS.enc.Base64.stringify(hexStr);",
									"//console.log('srcs->'+ srcs);",
									"",
									"var decrypt = CryptoJS.AES.decrypt(srcs, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });",
									"",
									"//console.log('typeof decrypt->'+ typeof decrypt);",
									"",
									"var decryptValue = decrypt.toString(CryptoJS.enc.Utf8);",
									"",
									"//console.log('decryptValue->'+decryptValue.toString());",
									"//获取用例描述",
									"//var testResult = pm.variables.get(\"caseDescription\");        ",
									"pm.test(decryptValue);",
									"",
									"var JsonValue=JSON.parse(decryptValue);",
									"tests['code==1000']=JsonValue.busiData.resultCode==1000",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//pm.test(testResult);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BaseUrl}}/user-service/userFinance/getUserFinanceInfoList?content={{parameter}}",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"user-service",
								"userFinance",
								"getUserFinanceInfoList"
							],
							"query": [
								{
									"key": "content",
									"value": "{{parameter}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "fud6编辑财务数据明细",
			"item": [
				{
					"name": "fud6编辑财务数据明细",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "48a6975c-b517-4164-8245-31cf20bc63e0",
								"exec": [
									"//AES 128  encrpt",
									"//  var originalData = data;",
									"let originalData=",
									"{",
									"    \"header\": {",
									"        \"orgCode\": \"shshanshanche01\",",
									"        \"transNo\": \"trans201611160001\",",
									"        \"transDate\": \"2016-11-07 15:28:30\",",
									"        \"token\": \"DF97B637317939224854BF590B2177B1\"",
									"    },",
									"    \"busiData\": {",
									"        \"batchNo\":\"batch-5bd010ef3ba30\",",
									"        \"types\":\"1\",",
									"        \"userFinanceInfoId\":\"6f3ab4bb80aa49a991e00da827b7d726\",",
									"        \"title\": \"coretest_5.82\",",
									"        \"number\": \"45645646464653\",",
									"        \"carNo\": \"吉A93340\",",
									"        \"userApplyRewardId\": \"00002219\",",
									"        \"firstAmount\": \"-68000\",",
									"    ",
									"        \"dayTimes\": \"2019-08-09 12:00:00\",",
									"        \"remark\": \"test remark\"",
									"    },",
									"    \"securityInfo\": {",
									"        \"sign\": \"E058A09C47A1BB53F5DE15AA82DDDB0C\"",
									"    }",
									"};",
									"let data2 = JSON.stringify(originalData);",
									"let key = \"daijinbcqc123456\";",
									"let iv  = \"1234567890123456\";",
									"",
									"console.log('request data->' + data2);",
									"key = CryptoJS.enc.Utf8.parse(key);",
									"iv  = CryptoJS.enc.Utf8.parse(iv);",
									"let srcs = CryptoJS.enc.Utf8.parse(data2);",
									"",
									"// var srcs = CryptoJS.enc.Utf8.parse(word);",
									"  var encrypted = CryptoJS.AES.encrypt(",
									"      srcs,",
									"      key,",
									"      { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 }",
									"    );",
									"  var hexStr = encrypted.ciphertext.toString();",
									"",
									"// 将Hex密文转化为按照utf8进行解析",
									"let utf8SrcStr = CryptoJS.enc.Utf8.parse(hexStr);  ",
									" ",
									"//   将密文转为Base64的字符串",
									"var base64Str = CryptoJS.enc.Base64.stringify(utf8SrcStr);",
									"pm.globals.set(\"parameter\", base64Str);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "dee5e9c7-484c-4d8c-bb74-ce3dfedd805a",
								"exec": [
									"var intermediate;",
									"var base64Content = responseBody;",
									"",
									"let key = \"daijinbcqc123456\";",
									"let iv  = \"1234567890123456\";",
									"",
									"key = CryptoJS.enc.Utf8.parse(key);",
									"iv  = CryptoJS.enc.Utf8.parse(iv);",
									"//console.log('base64Content->' + base64Content);",
									"//Base64解码",
									"let encryptedHexStr = CryptoJS.enc.Base64.parse(base64Content);",
									"",
									"//密文转化为UTF8",
									"encryptedHexStr = encryptedHexStr.toString(CryptoJS.enc.Utf8);",
									"//console.log('encryptedHexStr->'+ encryptedHexStr);",
									"",
									"// Hex解码",
									"let hexStr = CryptoJS.enc.Hex.parse(encryptedHexStr);",
									"//console.log('hexStr->'+ hexStr);",
									"var srcs = CryptoJS.enc.Base64.stringify(hexStr);",
									"//console.log('srcs->'+ srcs);",
									"",
									"var decrypt = CryptoJS.AES.decrypt(srcs, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });",
									"",
									"//console.log('typeof decrypt->'+ typeof decrypt);",
									"",
									"var decryptValue = decrypt.toString(CryptoJS.enc.Utf8);",
									"",
									"//console.log('decryptValue->'+decryptValue.toString());",
									"//获取用例描述",
									"//var testResult = pm.variables.get(\"caseDescription\");        ",
									"pm.test(decryptValue);",
									"",
									"var JsonValue=JSON.parse(decryptValue);",
									"tests['code==1000']=JsonValue.busiData.resultCode==1000",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//pm.test(testResult);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BaseUrl}}/user-service/userFinance/editUserFinanceInfo?content={{parameter}}",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"user-service",
								"userFinance",
								"editUserFinanceInfo"
							],
							"query": [
								{
									"key": "content",
									"value": "{{parameter}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "fud7获取财务数据明细详情",
			"item": [
				{
					"name": "fun7获取财务数据明细详情",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cefb964d-ecbf-4531-a5d6-b3981bac351c",
								"exec": [
									"//AES 128  encrpt",
									"//  var originalData = data;",
									"let originalData=",
									"{",
									"    \"header\":{",
									"        \"orgCode\":\"shark_taskmgnt\",",
									"        \"transNo\":\"trans-5bd010ef3ba31\",",
									"        \"transDate\":\"2018-10-24 14:27:59\",",
									"        \"token\":\"DF97B637317939224854BF590B2177B1\"",
									"    },",
									"    \"busiData\":{",
									"        \"userFinanceInfoId\":\"308fc40274564cb48c3bdb01fafb8ce0\",",
									"        \"batchNo\":\"batch-5bd010ef3ba30\"",
									"    },",
									"    \"securityInfo\":{",
									"        \"sign\":\"7b85b47b0d2c9d545424ea323f093dcc\"",
									"    }",
									"};",
									"let data2 = JSON.stringify(originalData);",
									"let key = \"daijinbcqc123456\";",
									"let iv  = \"1234567890123456\";",
									"",
									"console.log('request data->' + data2);",
									"key = CryptoJS.enc.Utf8.parse(key);",
									"iv  = CryptoJS.enc.Utf8.parse(iv);",
									"let srcs = CryptoJS.enc.Utf8.parse(data2);",
									"",
									"// var srcs = CryptoJS.enc.Utf8.parse(word);",
									"  var encrypted = CryptoJS.AES.encrypt(",
									"      srcs,",
									"      key,",
									"      { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 }",
									"    );",
									"  var hexStr = encrypted.ciphertext.toString();",
									"",
									"// 将Hex密文转化为按照utf8进行解析",
									"let utf8SrcStr = CryptoJS.enc.Utf8.parse(hexStr);  ",
									" ",
									"//   将密文转为Base64的字符串",
									"var base64Str = CryptoJS.enc.Base64.stringify(utf8SrcStr);",
									"pm.globals.set(\"parameter\", base64Str);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7ba5dc44-5608-4caf-a368-2dce808a7d54",
								"exec": [
									"var intermediate;",
									"var base64Content = responseBody;",
									"",
									"let key = \"daijinbcqc123456\";",
									"let iv  = \"1234567890123456\";",
									"",
									"key = CryptoJS.enc.Utf8.parse(key);",
									"iv  = CryptoJS.enc.Utf8.parse(iv);",
									"//console.log('base64Content->' + base64Content);",
									"//Base64解码",
									"let encryptedHexStr = CryptoJS.enc.Base64.parse(base64Content);",
									"",
									"//密文转化为UTF8",
									"encryptedHexStr = encryptedHexStr.toString(CryptoJS.enc.Utf8);",
									"//console.log('encryptedHexStr->'+ encryptedHexStr);",
									"",
									"// Hex解码",
									"let hexStr = CryptoJS.enc.Hex.parse(encryptedHexStr);",
									"//console.log('hexStr->'+ hexStr);",
									"var srcs = CryptoJS.enc.Base64.stringify(hexStr);",
									"//console.log('srcs->'+ srcs);",
									"",
									"var decrypt = CryptoJS.AES.decrypt(srcs, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });",
									"",
									"//console.log('typeof decrypt->'+ typeof decrypt);",
									"",
									"var decryptValue = decrypt.toString(CryptoJS.enc.Utf8);",
									"",
									"//console.log('decryptValue->'+decryptValue.toString());",
									"//获取用例描述",
									"//var testResult = pm.variables.get(\"caseDescription\");        ",
									"pm.test(decryptValue);",
									"",
									"var JsonValue=JSON.parse(decryptValue);",
									"tests['code==1000']=JsonValue.busiData.resultCode==1000",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//pm.test(testResult);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BaseUrl}}/user-service/userFinance/getUserFinanceInfoDetail?content={{parameter}}",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"user-service",
								"userFinance",
								"getUserFinanceInfoDetail"
							],
							"query": [
								{
									"key": "content",
									"value": "{{parameter}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}